# Multi-Environment Kiro Task Badge Workflow
# Handles different environments (dev, staging, prod)
# Place this file at: .github/workflows/kiro-badges.yml

name: Update Kiro Task Badges

on:
  push:
    paths:
      - '.kiro/specs/**/tasks.md'
    branches: 
      - main      # Production
      - develop   # Staging  
      - 'dev/*'   # Development
  
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  # Determine environment based on branch or input
  setup:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      branch_suffix: ${{ steps.env.outputs.branch_suffix }}
    steps:
      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          else
            echo "environment=development" >> $GITHUB_OUTPUT
          fi
          
          # Set branch suffix for badge file naming
          case "${{ github.ref }}" in
            refs/heads/main)
              echo "branch_suffix=" >> $GITHUB_OUTPUT
              ;;
            refs/heads/develop)
              echo "branch_suffix=-staging" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "branch_suffix=-dev" >> $GITHUB_OUTPUT
              ;;
          esac

  update-badges:
    needs: setup
    runs-on: ubuntu-latest
    environment: ${{ needs.setup.outputs.environment }}
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Generate Kiro task badges
        uses: kiro/kiro-task-badge-generator@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            Update Kiro task badges for ${{ needs.setup.outputs.environment }}
            
            Environment: ${{ needs.setup.outputs.environment }}
            Branch: ${{ github.ref_name }}
            Triggered by: ${{ github.event_name }}
        env:
          ENVIRONMENT: ${{ needs.setup.outputs.environment }}
          BRANCH_SUFFIX: ${{ needs.setup.outputs.branch_suffix }}
      
      - name: Create deployment status
        if: needs.setup.outputs.environment == 'production'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment?.id || 0,
              state: 'success',
              description: 'Kiro task badges updated successfully',
              environment: 'production'
            });